stages:
  - build
  - deploy-staging
  - deploy-production

.docker: &docker
  image: docker:stable
  services:
    - docker:dind

.deploy: &deploy
  image: lwolf/helm-kubectl-docker:v1103_291
  script:
    - mkdir -p ~/.kube
    - echo $kube_config | base64 -d > ~/.kube/config
    - kubectl config use-context $kube_context
    - helm init --client-only
    - helm repo update

    - |
      apk add --no-cache curl \
        && curl https://github.com/roboll/helmfile/releases/download/v0.21.0/helmfile_linux_amd64 -L -o /usr/bin/helmfile \
        && chmod +x /usr/bin/helmfile \
        && helmfile --version

    - export APP_NAME=$(basename $CI_PROJECT_NAMESPACE)
    - export RELEASE_NAME=$APP_NAME-$CI_ENVIRONMENT_SLUG
    - export NAMESPACE=$APP_NAME-$CI_ENVIRONMENT_SLUG
    - echo "Installing commit $CI_COMMIT_SHA of release $RELEASE_NAME to cluster=$kube_context environment=$CI_ENVIRONMENT_SLUG namespace=$NAMESPACE"

    - helmfile sync
  environment:
    name: $CI_JOB_NAME
  only:
  - master

build-docker-image-master:
  <<: *docker
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
    - docker tag "$CI_REGISTRY_IMAGE" "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  only:
    - master

build-docker-image-tags:
  <<: *docker
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  only:
    - tags

staging:
  stage: deploy-staging
  <<: *deploy

production:
  stage: deploy-production
  <<: *deploy
